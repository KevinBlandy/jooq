/*
 * This file is generated by jOOQ.
 */
package io.springboot.jooq.generated.tables.records;


import io.springboot.jooq.generated.tables.User;
import io.springboot.jooq.generated.tables.interfaces.IUser;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * 用户
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record6<UInteger, LocalDateTime, UByte, String, UInteger, UInteger>, IUser {

    private static final long serialVersionUID = -154554830;

    /**
     * Setter for <code>jooq.user.id</code>. 用户id
     */
    @Override
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.user.id</code>. 用户id
     */
    @Override
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>jooq.user.created_date</code>. 创建时间
     */
    @Override
    public void setCreatedDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.user.created_date</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>jooq.user.gender</code>. 性别。0：女，1：男
     */
    @Override
    public void setGender(UByte value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.user.gender</code>. 性别。0：女，1：男
     */
    @Override
    public UByte getGender() {
        return (UByte) get(2);
    }

    /**
     * Setter for <code>jooq.user.name</code>. 昵称
     */
    @Override
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooq.user.name</code>. 昵称
     */
    @Override
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq.user.paren_id</code>. 父级用户
     */
    @Override
    public void setParenId(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>jooq.user.paren_id</code>. 父级用户
     */
    @Override
    public UInteger getParenId() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>jooq.user.version</code>. 版本号
     */
    @Override
    public void setVersion(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>jooq.user.version</code>. 版本号
     */
    @Override
    public UInteger getVersion() {
        return (UInteger) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, LocalDateTime, UByte, String, UInteger, UInteger> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UInteger, LocalDateTime, UByte, String, UInteger, UInteger> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return User.USER.CREATED_DATE;
    }

    @Override
    public Field<UByte> field3() {
        return User.USER.GENDER;
    }

    @Override
    public Field<String> field4() {
        return User.USER.NAME;
    }

    @Override
    public Field<UInteger> field5() {
        return User.USER.PAREN_ID;
    }

    @Override
    public Field<UInteger> field6() {
        return User.USER.VERSION;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedDate();
    }

    @Override
    public UByte component3() {
        return getGender();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public UInteger component5() {
        return getParenId();
    }

    @Override
    public UInteger component6() {
        return getVersion();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedDate();
    }

    @Override
    public UByte value3() {
        return getGender();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public UInteger value5() {
        return getParenId();
    }

    @Override
    public UInteger value6() {
        return getVersion();
    }

    @Override
    public UserRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public UserRecord value3(UByte value) {
        setGender(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value5(UInteger value) {
        setParenId(value);
        return this;
    }

    @Override
    public UserRecord value6(UInteger value) {
        setVersion(value);
        return this;
    }

    @Override
    public UserRecord values(UInteger value1, LocalDateTime value2, UByte value3, String value4, UInteger value5, UInteger value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser from) {
        setId(from.getId());
        setCreatedDate(from.getCreatedDate());
        setGender(from.getGender());
        setName(from.getName());
        setParenId(from.getParenId());
        setVersion(from.getVersion());
    }

    @Override
    public <E extends IUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UInteger id, LocalDateTime createdDate, UByte gender, String name, UInteger parenId, UInteger version) {
        super(User.USER);

        set(0, id);
        set(1, createdDate);
        set(2, gender);
        set(3, name);
        set(4, parenId);
        set(5, version);
    }
}
