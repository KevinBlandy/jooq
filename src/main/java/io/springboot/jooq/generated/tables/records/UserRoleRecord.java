/*
 * This file is generated by jOOQ.
 */
package io.springboot.jooq.generated.tables.records;


import io.springboot.jooq.generated.tables.UserRole;
import io.springboot.jooq.generated.tables.interfaces.IUserRole;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 用户角色关联
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleRecord extends UpdatableRecordImpl<UserRoleRecord> implements Record3<UInteger, UInteger, LocalDateTime>, IUserRole {

    private static final long serialVersionUID = -998877445;

    /**
     * Setter for <code>jooq.user_role.role_id</code>. 用户id
     */
    @Override
    public void setRoleId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.user_role.role_id</code>. 用户id
     */
    @Override
    public UInteger getRoleId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>jooq.user_role.user_id</code>. 用户id
     */
    @Override
    public void setUserId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.user_role.user_id</code>. 用户id
     */
    @Override
    public UInteger getUserId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>jooq.user_role.created_date</code>. 创建时间
     */
    @Override
    public void setCreatedDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.user_role.created_date</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UInteger, UInteger> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UInteger, UInteger, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return UserRole.USER_ROLE.ROLE_ID;
    }

    @Override
    public Field<UInteger> field2() {
        return UserRole.USER_ROLE.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return UserRole.USER_ROLE.CREATED_DATE;
    }

    @Override
    public UInteger component1() {
        return getRoleId();
    }

    @Override
    public UInteger component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedDate();
    }

    @Override
    public UInteger value1() {
        return getRoleId();
    }

    @Override
    public UInteger value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedDate();
    }

    @Override
    public UserRoleRecord value1(UInteger value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserRoleRecord value2(UInteger value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRoleRecord value3(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public UserRoleRecord values(UInteger value1, UInteger value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserRole from) {
        setRoleId(from.getRoleId());
        setUserId(from.getUserId());
        setCreatedDate(from.getCreatedDate());
    }

    @Override
    public <E extends IUserRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleRecord
     */
    public UserRoleRecord() {
        super(UserRole.USER_ROLE);
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(UInteger roleId, UInteger userId, LocalDateTime createdDate) {
        super(UserRole.USER_ROLE);

        set(0, roleId);
        set(1, userId);
        set(2, createdDate);
    }
}
