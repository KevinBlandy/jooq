/*
 * This file is generated by jOOQ.
 */
package io.springboot.jooq.generated.tables;


import io.springboot.jooq.generated.Jooq;
import io.springboot.jooq.generated.Keys;
import io.springboot.jooq.generated.tables.records.UserSetingRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * 用户设置关联
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSeting extends TableImpl<UserSetingRecord> {

    private static final long serialVersionUID = -696490540;

    /**
     * The reference instance of <code>jooq.user_seting</code>
     */
    public static final UserSeting USER_SETING = new UserSeting();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSetingRecord> getRecordType() {
        return UserSetingRecord.class;
    }

    /**
     * The column <code>jooq.user_seting.id</code>. 设置id
     */
    public final TableField<UserSetingRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "设置id");

    /**
     * The column <code>jooq.user_seting.notify</code>. 是否接受通知
     */
    public final TableField<UserSetingRecord, UByte> NOTIFY = createField(DSL.name("notify"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "是否接受通知");

    /**
     * The column <code>jooq.user_seting.user_id</code>. 用户id
     */
    public final TableField<UserSetingRecord, UInteger> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "用户id");

    /**
     * Create a <code>jooq.user_seting</code> table reference
     */
    public UserSeting() {
        this(DSL.name("user_seting"), null);
    }

    /**
     * Create an aliased <code>jooq.user_seting</code> table reference
     */
    public UserSeting(String alias) {
        this(DSL.name(alias), USER_SETING);
    }

    /**
     * Create an aliased <code>jooq.user_seting</code> table reference
     */
    public UserSeting(Name alias) {
        this(alias, USER_SETING);
    }

    private UserSeting(Name alias, Table<UserSetingRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserSeting(Name alias, Table<UserSetingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户设置关联"), TableOptions.table());
    }

    public <O extends Record> UserSeting(Table<O> child, ForeignKey<O, UserSetingRecord> key) {
        super(child, key, USER_SETING);
    }

    @Override
    public Schema getSchema() {
        return Jooq.JOOQ;
    }

    @Override
    public Identity<UserSetingRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_USER_SETING;
    }

    @Override
    public UniqueKey<UserSetingRecord> getPrimaryKey() {
        return Keys.KEY_USER_SETING_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserSetingRecord>> getKeys() {
        return Arrays.<UniqueKey<UserSetingRecord>>asList(Keys.KEY_USER_SETING_PRIMARY, Keys.KEY_USER_SETING_UK_RDCHRAX5RP1M1Y4KPAX285KRW);
    }

    @Override
    public UserSeting as(String alias) {
        return new UserSeting(DSL.name(alias), this);
    }

    @Override
    public UserSeting as(Name alias) {
        return new UserSeting(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSeting rename(String name) {
        return new UserSeting(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSeting rename(Name name) {
        return new UserSeting(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UByte, UInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
